<?xml version='1.0' encoding='iso-8859-1'?>

<project name="imCMS" default="process-webapp-sources">

    <!--
    Creates webapp sources.
    -->

    <property name="version" value="SET BY MAVEN"/>

    <tstamp>
        <format property="compilationdate" pattern="d-MM-yyyy" locale="en,GB"/>
    </tstamp>

    <property file="build.properties"/>

    <property name="build.webapp.dir" value="SET BY MAVEN"/>
    <property name="build.webapp.login.dir" value="${build.webapp.dir}/login"/>
    <property name="build.webapp.imcms.dir" value="${build.webapp.dir}/imcms"/>
    <property name="build.webapp.webinf.dir" value="${build.webapp.dir}/WEB-INF"/>

    <property name="main.resources-conf.dir" value="src/main/resources-conf"/>

    <property name="versionfile" value="${build.webapp.webinf.dir}/version.txt"/>

    <property name="srcincludes" value="MANIFEST.TXT"/>

    <property name="webinf.conf.dir" value="${build.webapp.webinf.dir}/conf"/>
    <property name="webinf.templates.dir" value="${build.webapp.webinf.dir}/templates"/>
    <property name="webinf.solr.dir" value="${build.webapp.webinf.dir}/solr"/>

    <taskdef name="imtranslate" classname="com.imcode.ant.tasks.Translate"/>
    <taskdef name="setsystemproperty" classname="com.imcode.ant.tasks.SetSystemPropertyTask"/>

    <setsystemproperty name="org.apache.commons.logging.Log" value="org.apache.commons.logging.impl.NoOpLog"/>

    <!--<target name="changes">
        <xslt in="docs/changes.xml" style="docs/changes.xsl" out="docs/CHANGES.HTML"/>
    </target>-->

    <target name="process-webapp-sources" depends="init"
            description="Translates and copies the webapp sources to webapp.">

        <property name="texttemplates" value="${webinf.templates.dir}/text"/>
        <property name="demotemplates" value="${texttemplates}/demo"/>
        <property name="imagespattern" value="**/*.png,**/*.jpg,**/*.gif"/>
        <property name="swfpattern" value="**/*.swf"/>

        <property name="docs" value="${build.webapp.imcms.dir}/docs"/>
        <property name="apisamples" value="${docs}/apisamples"/>
        <property name="apidocs" value="${docs}/api"/>

        <dependset>
            <srcfileset file="build.properties"/>
            <targetfileset dir="${webinf.conf.dir}">
                <include name="imcms_*"/>
                <include name="server.properties"/>
                <include name="jaas.conf"/>
                <include name="krb.conf"/>
            </targetfileset>
        </dependset>

        <mkdir dir="${build.webapp.imcms.dir}"/>
        <mkdir dir="${build.webapp.login.dir}"/>
        <mkdir dir="${build.webapp.dir}/css"/>
        <mkdir dir="${build.webapp.dir}/images"/>
        <mkdir dir="${build.webapp.dir}/javascript"/>
        <mkdir dir="${build.webapp.dir}/jsp"/>
        <mkdir dir="${build.webapp.dir}/user"/>
        <mkdir dir="${webinf.solr.dir}"/>

        <mkdir dir="${build.webapp.webinf.dir}/includes"/>
        <mkdir dir="${build.webapp.webinf.dir}/logs"/>
        <mkdir dir="${build.webapp.webinf.dir}/uploads"/>
        <mkdir dir="${build.webapp.webinf.dir}/classes"/>

        <echo message="${version}" file="${versionfile}"/>

        <!-- Copy and filter webinf, conf and classes resources to main webapp dir -->
        <copy todir="${webinf.conf.dir}" filtering="true" encoding="utf-8">
            <fileset dir="${main.resources-conf.dir}"/>
        </copy>

        <copy todir="${build.webapp.dir}" filtering="true" encoding="utf-8">
            <fileset dir="src/main/webapp"
                     excludes="imcms/lang/**,WEB-INF/templates/lang/**,${imagespattern},${swfpattern}"/>
        </copy>

        <copy todir="${build.webapp.dir}">
            <fileset dir="src/main/webapp" excludes="imcms/lang/**,WEB-INF/templates/lang/**"
                     includes="${imagespattern},${swfpattern}"/>
        </copy>

        <copy todir="${webinf.solr.dir}">
            <fileset dir="src/main/webapp/WEB-INF/solr"/>
        </copy>

        <antcall target="web-lang">
            <param name="buildlanguage" value="swe"/>
        </antcall>

        <antcall target="web-lang">
            <param name="buildlanguage" value="eng"/>
        </antcall>

        <mkdir dir="${demotemplates}"/>

        <copy todir="${apisamples}" description="appending .txt on all jsp files making the source browsable">
            <fileset dir="${apisamples}">
                <include name="*.jsp"/>
            </fileset>
            <mapper type="glob" from="*" to="*.txt"/>
        </copy>

        <copy todir="${docs}">
            <fileset dir="docs"/>
        </copy>
    </target>


    <target name="web-lang" depends="init">
        <imtranslate bundle="${main.resources-conf.dir}/imcms" bundlelanguage="${buildlanguage}"
                     starttoken="&lt;? " endtoken=" ?&gt;"
                     todir="${webinf.templates.dir}/${buildlanguage}" filtering="true" encoding="utf-8">
            <fileset dir="src/main/webapp/WEB-INF/templates/lang"/>
        </imtranslate>

        <imtranslate bundle="${main.resources-conf.dir}/imcms" bundlelanguage="${buildlanguage}"
                     starttoken="&lt;? " endtoken=" ?&gt;"
                     todir="${build.webapp.imcms.dir}/${buildlanguage}" filtering="true" encoding="utf-8">
            <fileset dir="src/main/webapp/imcms/lang" excludes="${imagespattern}"/>
        </imtranslate>

        <copy todir="${build.webapp.imcms.dir}/${buildlanguage}" filtering="false">
            <fileset dir="src/main/webapp/imcms/lang" includes="${imagespattern}"/>
        </copy>
    </target>


    <target name="init" depends="init-global-filters"
            description="Handy target for everything else to depend on.">

        <record name="build.log"/>

        <tstamp/>

    </target>


    <target name="init-global-filters">

        <filter token="defaultlanguage" value="${defaultlanguage}"/>

        <filter token="documentationwebappurl" value="${documentation-host}"/>
        <filter token="documentationurl" value="${documentation-host}"/>

        <filter token="server-name" value="${server-name}"/>

        <filter token="deny-multiple-user-login" value="${deny-multiple-user-login}"/>

        <filter token="db-name" value="${db-name}"/>
        <filter token="db-url-without-db-name" value="${db-url-without-db-name}"/>

        <filter token="db-driver" value="${db-driver}"/>
        <filter token="db-url" value="${db-url}"/>
        <filter token="db-name" value="${db-name}"/>
        <filter token="db-user" value="${db-user}"/>
        <filter token="db-pass" value="${db-pass}"/>
        <filter token="db-maxconnections" value="${db-maxconnections}"/>
        <filter token="hibernate-hbm2ddl-auto" value="${hibernate-hbm2ddl-auto}"/>

        <filter token="hibernate-dialect" value="${hibernate-dialect}"/>

        <filter token="external-authenticator" value="${external-authenticator}"/>
        <filter token="external-user-and-role-registry" value="${external-user-and-role-registry}"/>

        <filter token="ldap-url" value="${ldap-url}"/>
        <filter token="ldap-bind-dn" value="${ldap-bind-dn}"/>
        <filter token="ldap-password" value="${ldap-password}"/>
        <filter token="ldap-user-object-class" value="${ldap-user-object-class}"/>
        <filter token="ldap-attribute-login-name" value="${ldap-attribute-login-name}"/>


        <filter token="secondary-external-authenticator" value="${secondary-external-authenticator}"/>
        <filter token="secondary-external-user-and-role-registry" value="${secondary-external-user-and-role-registry}"/>

        <filter token="secondary-ldap-url" value="${secondary-ldap-url}"/>
        <filter token="secondary-ldap-bind-dn" value="${secondary-ldap-bind-dn}"/>
        <filter token="secondary-ldap-password" value="${secondary-ldap-password}"/>
        <filter token="secondary-ldap-user-object-class" value="${secondary-ldap-user-object-class}"/>
        <filter token="secondary-ldap-attribute-login-name" value="${secondary-ldap-attribute-login-name}"/>


        <filter token="sso-enabled" value="${sso-enabled}"/>
        
        <filter token="sso-jaas-config-name" value="${sso-jaas-config-name}"/>
        <filter token="sso-use-local-jaas-config" value="${sso-use-local-jaas-config}"/>
        <filter token="sso-jaas-principal-name" value="${sso-jaas-principal-name}"/>
        <filter token="sso-jaas-principal-password" value="${sso-jaas-principal-password}"/>
        
        <filter token="sso-use-local-krb-config" value="${sso-use-local-krb-config}"/>
        <filter token="sso-krb-realm" value="${sso-krb-realm}"/>
        <filter token="sso-krb-kdc" value="${sso-krb-kdc}"/>
        
        <filter token="sso-kerberos-debug" value="${sso-kerberos-debug}"/>


        <filter token="smtp-server" value="${smtp-server}"/>

        <filter token="servermaster-name" value="${servermaster-name}"/>
        <filter token="servermaster-email" value="${servermaster-email}"/>

        <filter token="webmaster-name" value="${webmaster-name}"/>
        <filter token="webmaster-email" value="${webmaster-email}"/>

        <filter token="image-magick-path" value="${image-magick-path}"/>
        <filter token="image-archive-storage-path" value="${image-archive-storage-path}"/>
        <filter token="image-archive-temp-path" value="${image-archive-temp-path}"/>
        <filter token="image-archive-images-path" value="${image-archive-images-path}"/>
        <filter token="image-archive-libraries-path" value="${image-archive-libraries-path}"/>
        <filter token="image-archive-users-library-folder" value="${image-archive-users-library-folder}"/>
        <filter token="image-archive-old-library-paths" value="${image-archive-old-library-paths}"/>
        <filter token="image-archive-max-image-upload-size" value="${image-archive-max-image-upload-size}"/>
        <filter token="image-archive-max-zip-upload-size" value="${image-archive-max-zip-upload-size}"/>
        <filter token="image-cache-max-size" value="${image-cache-max-size}"/>

        <filter token="solr-url" value="${solr-url}"/>

        <filter token="login-password-encryption-enabled" value="${login-password-encryption-enabled}"/>
        <filter token="login-password-encryption-salt" value="${login-password-encryption-salt}"/>

        <filter token="login-password-reset-lifespan" value="${login-password-reset-lifespan}"/>
        <filter token="superadmin-login-password-reset-allowed" value="${superadmin-login-password-reset-allowed}"/>


        <filter token="index-disabled-file-mimes" value="${index-disabled-file-mimes}"/>
        <filter token="index-disabled-file-extensions" value="${index-disabled-file-extensions}"/>

        <filter token="error-logger-url" value="${error-logger-url}"/>
    </target>

</project>
